name: Deploy to Production

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script_stop: true
          command_timeout: 30m
          script: |
            set -euo pipefail
            APP_DIR=/opt/htmlBook
            SERVICE=htmlbook
            PORT=5173
            DOMAIN="${{ secrets.PROD_DOMAIN }}"

            sudo apt-get update -y
            if ! command -v node >/dev/null 2>&1; then
              curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi
            sudo apt-get install -y nginx git

            sudo mkdir -p "$APP_DIR"
            sudo chown -R "$USER":"$USER" "$APP_DIR"
            if [ ! -d "$APP_DIR/.git" ]; then
              git clone https://github.com/navidniya/htmlBook.git "$APP_DIR"
            fi
            cd "$APP_DIR"
            git fetch origin
            git reset --hard origin/main
            npm ci --omit=dev

            if [ ! -f /etc/systemd/system/${SERVICE}.service ]; then
              sudo tee /etc/systemd/system/${SERVICE}.service >/dev/null <<EOF
            [Unit]
            Description=Realty Scan Node server (htmlBook)
            After=network.target

            [Service]
            Type=simple
            WorkingDirectory=${APP_DIR}
            Environment=PORT=${PORT}
            Environment=NODE_ENV=production
            ExecStart=/usr/bin/node server.js
            Restart=always
            RestartSec=3
            User=root
            Group=root

            [Install]
            WantedBy=multi-user.target
            EOF
              sudo systemctl daemon-reload
              sudo systemctl enable --now ${SERVICE}
            else
              sudo systemctl restart ${SERVICE}
            fi

            if [ ! -f /etc/nginx/sites-available/htmlbook ]; then
              sudo tee /etc/nginx/sites-available/htmlbook >/dev/null <<'NGINX'
            server {
              server_name _;
              location / {
                proxy_pass http://127.0.0.1:5173;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
              }
            }
            NGINX
              sudo ln -sf /etc/nginx/sites-available/htmlbook /etc/nginx/sites-enabled/htmlbook
            fi

            if [ -n "$DOMAIN" ]; then
              sudo sed -i "s/server_name _;/server_name ${DOMAIN} www.${DOMAIN};/" /etc/nginx/sites-available/htmlbook || true
            fi
            sudo nginx -t
            sudo systemctl reload nginx

            if [ -n "$DOMAIN" ]; then
              sudo apt-get install -y certbot python3-certbot-nginx
              sudo certbot --nginx -d "${DOMAIN}" -d "www.${DOMAIN}" --redirect --non-interactive --agree-tos -m "admin@${DOMAIN}" || true
            fi


